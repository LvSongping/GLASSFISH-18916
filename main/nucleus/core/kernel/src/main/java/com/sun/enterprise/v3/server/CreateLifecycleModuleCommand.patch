Index: CreateLifecycleModuleCommand.java
===================================================================
--- CreateLifecycleModuleCommand.java	(revision 55151)
+++ CreateLifecycleModuleCommand.java	(working copy)
@@ -40,6 +40,7 @@
 
 package org.glassfish.deployment.admin;
 
+import com.sun.enterprise.config.serverbeans.*;
 import com.sun.enterprise.config.serverbeans.Cluster;
 import com.sun.enterprise.util.LocalStringManagerImpl;
 import com.sun.enterprise.config.serverbeans.ServerTags;
@@ -88,6 +89,7 @@
         params={
             @RestParam(name="target", value="$parent")
         }),
+	@RestEndpoint(configBean=Applications.class,opType=RestEndpoint.OpType.POST, path="deploy"),
     @RestEndpoint(configBean=Server.class,
         opType=RestEndpoint.OpType.POST, 
         path="create-lifecycle-module", 
@@ -131,6 +133,9 @@
     @Inject
     Domain domain;
 
+    @Inject
+    Applications apps;
+
     final private static LocalStringManagerImpl localStrings = new LocalStringManagerImpl(CreateLifecycleModuleCommand.class);
    
     public void execute(AdminCommandContext context) {
@@ -194,11 +199,20 @@
                 throw new IllegalArgumentException(localStrings.getLocalString("lifecycle.use.create_app_ref_2", "Lifecycle module {0} is already created in this domain. Please use create application ref to create application reference on target {1}", name, target));
             }
         } else {
+            Application app = apps.getModule(Application.class, name);
             if (referencedTargets.contains(target)) {
+                if(app.isLifecycleModule()){
                 throw new IllegalArgumentException(localStrings.getLocalString("lifecycle.alreadyreg", "Lifecycle module {0} is already created on this target {1}", name, target));
+            }else{
+                throw new IllegalArgumentException(localStrings.getLocalString("Application.alreadyreg", "Application module {0} is  created on this target {1},please pick up a different name for the Lifecycle module on target {1}", name, target));
+            }
             } else {
+                 if(app.isLifecycleModule()){
                 throw new IllegalArgumentException(localStrings.getLocalString("lifecycle.use.create_app_ref", "Lifecycle module {0} is already referenced by other target(s). Please use create application ref to create application reference on target {1}", name, target));
+            }else{
+                throw new IllegalArgumentException(localStrings.getLocalString("Application.use.create_app_ref", "Application module {0} is  referenced by other target(s). please pick up a different name for the Lifecycle module  on target {1}", name, target));
             }
+            }
         }
     }
 }
